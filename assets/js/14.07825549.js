(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{537:function(t,a,s){t.exports=s.p+"assets/img/01.1f522dc1.png"},538:function(t,a,s){t.exports=s.p+"assets/img/02.e1a32e64.png"},539:function(t,a,s){t.exports=s.p+"assets/img/03.0c5dd8d7.jpg"},540:function(t,a,s){t.exports=s.p+"assets/img/04.52d8a284.jpg"},541:function(t,a,s){t.exports=s.p+"assets/img/05.b42472a3.jpg"},542:function(t,a,s){t.exports=s.p+"assets/img/06.5b473d17.png"},543:function(t,a,s){t.exports=s.p+"assets/img/07.a9b0be29.jpg"},544:function(t,a,s){t.exports=s.p+"assets/img/08.b834d81a.jpg"},627:function(t,a,s){"use strict";s.r(a);var n=s(11),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("code",[t._v("React")]),t._v("最大的亮点应该就是将"),n("code",[t._v("virtual dom")]),t._v("和高效的"),n("code",[t._v("diff")]),t._v("算法结合。")]),t._v(" "),n("h2",{attrs:{id:"一、react对diff算法的设想"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、react对diff算法的设想"}},[t._v("#")]),t._v(" 一、"),n("code",[t._v("React")]),t._v("对"),n("code",[t._v("diff")]),t._v("算法的设想")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://grfia.dlsi.ua.es/ml/algorithms/references/editsurvey_bille.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("传统的"),n("code",[t._v("diff")]),t._v("算法"),n("OutboundLink")],1),t._v("通过循环递归对接点进行一次对比，时间复杂度为"),n("code",[t._v("O(n^3)")]),t._v("，其中"),n("code",[t._v("n")]),t._v("指"),n("code",[t._v("Dom")]),t._v("树中元素的个数。这意味着如果要展示"),n("code",[t._v("1000")]),t._v("个节点，就要依次执行上十亿次的比较。这种指数型的性能消耗对于前端渲染场景来说代价太高了！现今的"),n("code",[t._v("CPU")]),t._v(" 每秒钟能执行大约"),n("code",[t._v("30")]),t._v("亿条指令，即便是最高效的实现，也不可能在一秒内计算出差异情况。")]),t._v(" "),n("p",[n("code",[t._v("React")]),t._v("为了提高"),n("code",[t._v("diff")]),t._v("算法效率，基于下面的假设，实现了一个时间复杂度为"),n("code",[t._v("O(n)")]),t._v("的"),n("code",[t._v("diff")]),t._v("算法：")]),t._v(" "),n("ol",[n("li",[t._v("两个不同类型的元素将产生不同的树。")]),t._v(" "),n("li",[t._v("开发者可以通过指定"),n("code",[t._v("key")]),t._v("属性值，示意哪些子元素可能是稳定的。")])]),t._v(" "),n("p",[t._v("实践中，上述假设适用于大部分应用场景。")]),t._v(" "),n("h3",{attrs:{id:"_1-1-假设一"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-假设一"}},[t._v("#")]),t._v(" "),n("code",[t._v("1.1")]),t._v(" 假设一")]),t._v(" "),n("p",[t._v("当对比两棵树时，"),n("code",[t._v("React")]),t._v("首先比较两个根节点。根节点的"),n("code",[t._v("type")]),t._v("不同，其行为也不同。")]),t._v(" "),n("h4",{attrs:{id:"_1-1-1-不同类型的元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-不同类型的元素"}},[t._v("#")]),t._v(" "),n("code",[t._v("1.1.1")]),t._v(" 不同类型的元素")]),t._v(" "),n("p",[t._v("每当根元素有不同类型，"),n("code",[t._v("React")]),t._v("将卸载旧树并重新构建新树。")]),t._v(" "),n("p",[t._v("当树被卸载，旧的"),n("code",[t._v("DOM")]),t._v("节点将被销毁。组件实例会调用"),n("code",[t._v("componentWillUnmount()")]),t._v("。当构建一棵新树，新的"),n("code",[t._v("DOM")]),t._v("节点被插入到"),n("code",[t._v("DOM")]),t._v("中。组件实例将依次调用"),n("code",[t._v("componentWillMount()")]),t._v(" 和"),n("code",[t._v("componentDidMount()")]),t._v("。任何与旧树有关的状态都将丢弃。")]),t._v(" "),n("p",[t._v("例如，以下节点对比之后：")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Counter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Counter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("这将会销毁旧的"),n("code",[t._v("Counter")]),t._v("并重装新的"),n("code",[t._v("Counter")]),t._v("。")]),t._v(" "),n("h4",{attrs:{id:"_1-1-2-相同类型的dom元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-相同类型的dom元素"}},[t._v("#")]),t._v(" "),n("code",[t._v("1.1.2")]),t._v(" 相同类型的"),n("code",[t._v("DOM")]),t._v("元素")]),t._v(" "),n("ul",[n("li",[t._v("对于类型相同的"),n("code",[t._v("React DOM")]),t._v(" 元素，"),n("code",[t._v("React")]),t._v("会对比两者的属性是否相同，只更新不同的属性")]),t._v(" "),n("li",[t._v("当处理完这个"),n("code",[t._v("DOM")]),t._v("节点，"),n("code",[t._v("React")]),t._v("就会递归处理子节点。")])]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 旧 --\x3e")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("before"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("title")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stuff"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 新 --\x3e")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("after"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("title")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stuff"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 只更新：className 属性 --\x3e")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 旧 --\x3e")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("{{color:")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("'red',")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("fontWeight:")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("'bold'}}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 新 --\x3e")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("{{color:")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("'green',")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("fontWeight:")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("'bold'}}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 只更新：color属性 --\x3e")]),t._v("\n")])])]),n("h4",{attrs:{id:"_1-1-3-相同类型的组件元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-相同类型的组件元素"}},[t._v("#")]),t._v(" "),n("code",[t._v("1.1.3")]),t._v(" 相同类型的组件元素")]),t._v(" "),n("p",[t._v("当组件更新时，实例仍保持一致，以让状态能够在渲染之间保留。"),n("code",[t._v("React")]),t._v("通过更新底层组件实例的"),n("code",[t._v("props")]),t._v("来产生新元素，并在底层实例上依次调用"),n("code",[t._v("componentWillReceiveProps()")]),t._v("和"),n("code",[t._v("componentWillUpdate()")]),t._v("方法。")]),t._v(" "),n("p",[t._v("接下来，"),n("code",[t._v("render()")]),t._v("方法被调用，同时对比算法会递归处理之前的结果和新的结果。")]),t._v(" "),n("h4",{attrs:{id:"_1-1-4-递归子节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-递归子节点"}},[t._v("#")]),t._v(" "),n("code",[t._v("1.1.4")]),t._v(" 递归子节点")]),t._v(" "),n("p",[t._v("默认时。当递归"),n("code",[t._v("DOM")]),t._v("节点的子节点，"),n("code",[t._v("React")]),t._v("仅在同一时间点递归两个子节点列表，并在有不同时产生一个变更。")]),t._v(" "),n("p",[t._v("例如，当在子节点末尾增加一个元素，两棵树的转换效果很好：")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("first"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("second"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("first"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("second"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("third"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("若在开始位置插入元素则会使得性能很棘手。例如，两棵树的转换效果则比较糟糕：")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Duke"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Villanova"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Connecticut"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Duke"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Villanova"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[n("code",[t._v("React")]),t._v("会调整每个子节点，不会意识到可以完整保留"),n("code",[t._v("<li>Duke</li>")]),t._v("和"),n("code",[t._v("<li>Villanova</li>")]),t._v("子树。低效成了一个问题。")]),t._v(" "),n("h3",{attrs:{id:"_1-2-假设二-key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-假设二-key"}},[t._v("#")]),t._v(" "),n("code",[t._v("1.2")]),t._v(" 假设二："),n("code",[t._v("Key")])]),t._v(" "),n("p",[t._v("为解决该问题，"),n("code",[t._v("React")]),t._v("支持了一个"),n("code",[t._v("key")]),t._v("属性。当子节点有"),n("code",[t._v("key")]),t._v("时，"),n("code",[t._v("React")]),t._v("使用"),n("code",[t._v("key")]),t._v("来匹配原本树的子节点和新树的子节点。")]),t._v(" "),n("h2",{attrs:{id:"二、diff解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、diff解析"}},[t._v("#")]),t._v(" 二、"),n("code",[t._v("diff")]),t._v("解析")]),t._v(" "),n("p",[t._v("基于以上假设，"),n("code",[t._v("React")]),t._v("分别对"),n("code",[t._v("tree diff")]),t._v("、"),n("code",[t._v("component diff")]),t._v("以及"),n("code",[t._v("element diff")]),t._v("进行算法优化")]),t._v(" "),n("h3",{attrs:{id:"_2-1-tree-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-tree-diff"}},[t._v("#")]),t._v(" "),n("code",[t._v("2.1")]),t._v(" "),n("code",[t._v("tree diff")])]),t._v(" "),n("p",[n("code",[t._v("React")]),t._v("对不同类型的节点的处理逻辑我们很容易得到推论，那就是"),n("code",[t._v("React")]),t._v("的"),n("code",[t._v("DOM Diff")]),t._v("算法实际上只会对树进行逐层比较，两棵树只会对同一层次的节点进行比较，如下所述：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(537),alt:"image from dependency"}})]),t._v(" "),n("p",[n("code",[t._v("React")]),t._v("只会对相同颜色方框内的"),n("code",[t._v("DOM")]),t._v("节点进行比较，即同一个父节点下的所有子节点。当发现节点已经不存在，则该节点及其子节点会被完全删除掉，不会用于进一步的比较。这样只需要对树进行一次遍历，便能完成整个"),n("code",[t._v("DOM")]),t._v("树的比较。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updateChildren")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextNestedChildrenElements"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transaction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  updateDepth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" errorThrown "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_updateChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextNestedChildrenElements"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transaction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    errorThrown "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    updateDepth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("updateDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errorThrown"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearQueue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processQueue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如果出现了"),n("code",[t._v("DOM")]),t._v("节点跨层级的移动操作，如下图，"),n("code",[t._v("React diff")]),t._v("会有怎样的表现呢")]),t._v(" "),n("p",[n("img",{attrs:{src:s(538),alt:"image from dependency"}})]),t._v(" "),n("p",[t._v("如图，"),n("code",[t._v("A")]),t._v("节点（包括其子节点）整个被移动到"),n("code",[t._v("D")]),t._v("节点下，由于"),n("code",[t._v("React")]),t._v(" 只会简单的考虑同层级节点的位置变换，而对于不同层级的节点，只有创建和删除操作。当根节点发现子节点中"),n("code",[t._v("A")]),t._v(" 消失了，就会直接销毁"),n("code",[t._v("A")]),t._v("；当"),n("code",[t._v("D")]),t._v("发现多了一个子节点"),n("code",[t._v("A")]),t._v("，则会创建新的"),n("code",[t._v("A")]),t._v("（包括子节点）作为其子节点。此时，"),n("code",[t._v("React diff")]),t._v("的执行情况："),n("code",[t._v("create A -> create B -> create C -> delete A")]),t._v("。")]),t._v(" "),n("p",[t._v("由此可发现，当出现节点跨层级移动时，并不会出现想象中的移动操作，而是以"),n("code",[t._v("A")]),t._v(" 为根节点的树被整个重新创建，这是一种影响"),n("code",[t._v("React")]),t._v(" 性能的操作，因此"),n("code",[t._v("React")]),t._v("官方建议不要进行"),n("code",[t._v("DOM")]),t._v(" 节点跨层级的操作。")]),t._v(" "),n("p",[t._v("注意：在开发组件时，保持稳定的"),n("code",[t._v("DOM")]),t._v(" 结构会有助于性能的提升。例如，可以通过"),n("code",[t._v("CSS")]),t._v(" 隐藏或显示节点，而不是真的移除或添加"),n("code",[t._v("DOM")]),t._v("节点。")]),t._v(" "),n("h3",{attrs:{id:"_2-2-component-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-component-diff"}},[t._v("#")]),t._v(" "),n("code",[t._v("2.2")]),t._v(" "),n("code",[t._v("component diff")])]),t._v(" "),n("p",[n("code",[t._v("React")]),t._v("是基于组件构建应用的，对于组件间的比较所采取的策略也是简洁高效。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("如果是同一类型的组件，按照原策略继续比较"),n("code",[t._v("virtual DOM tree")]),t._v("。")])]),t._v(" "),n("li",[n("p",[t._v("如果不是，则将该组件判断为"),n("code",[t._v("dirty component")]),t._v("，从而替换整个组件下的所有子节点。")])]),t._v(" "),n("li",[n("p",[t._v("对于同一类型的组件，有可能其"),n("code",[t._v("Virtual DOM")]),t._v(" 没有任何变化，如果能够确切的知道这点那可以节省大量的"),n("code",[t._v("diff")]),t._v("运算时间，因此"),n("code",[t._v("React")]),t._v("允许用户通过"),n("code",[t._v("shouldComponentUpdate()")]),t._v("来判断该组件是否需要进行"),n("code",[t._v("diff")]),t._v("。")])])]),t._v(" "),n("p",[t._v("如下图，当"),n("code",[t._v("component D")]),t._v("改变为"),n("code",[t._v("component G")]),t._v(" 时，即使这两个"),n("code",[t._v("component")]),t._v("结构相似，一旦"),n("code",[t._v("React")]),t._v("判断 "),n("code",[t._v("D")]),t._v("和"),n("code",[t._v("G")]),t._v("是不同类型的组件，就不会比较二者的结构，而是直接删除"),n("code",[t._v("component D")]),t._v("，重新创建"),n("code",[t._v("component G")]),t._v(" 以及其子节点。虽然当两个"),n("code",[t._v("component")]),t._v(" 是不同类型但结构相似时，"),n("code",[t._v("React diff")]),t._v("会影响性能，但正如"),n("code",[t._v("React")]),t._v("官方博客所言：不同类型的 "),n("code",[t._v("component")]),t._v("是很少存在相似"),n("code",[t._v("DOM tree")]),t._v(" 的机会，因此这种极端因素很难在实现开发过程中造成重大影响的。")]),t._v(" "),n("p",[n("img",{attrs:{src:s(539),alt:"image from dependency"}})]),t._v(" "),n("h3",{attrs:{id:"_2-3-element-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-element-diff"}},[t._v("#")]),t._v(" "),n("code",[t._v("2.3")]),t._v(" "),n("code",[t._v("element diff")])]),t._v(" "),n("p",[t._v("当节点处于同一层级时，"),n("code",[t._v("React diff")]),t._v(" 提供了三种节点操作，分别为："),n("code",[t._v("INSERT_MARKUP")]),t._v("（插入）、"),n("code",[t._v("MOVE_EXISTING")]),t._v("（移动）和"),n("code",[t._v("REMOVE_NODE")]),t._v("（删除）。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("INSERT_MARKUP")]),t._v("：新的"),n("code",[t._v("component")]),t._v("类型不在老集合里， 即是全新的节点，需要对新节点执行插入操作。")]),t._v(" "),n("li",[n("code",[t._v("MOVE_EXISTING")]),t._v("：在老集合有新"),n("code",[t._v("component")]),t._v("类型，且 "),n("code",[t._v("element")]),t._v("是可更新的类型，"),n("code",[t._v("generateComponentChildren")]),t._v("已调用"),n("code",[t._v("receiveComponent")]),t._v("，这种情况下 "),n("code",[t._v("prevChild=nextChild")]),t._v("，就需要做移动操作，可以复用以前的 "),n("code",[t._v("DOM")]),t._v("节点。")]),t._v(" "),n("li",[n("code",[t._v("REMOVE_NODE")]),t._v("：老"),n("code",[t._v("component")]),t._v(" 类型，在新集合里也有，但对应的"),n("code",[t._v("element")]),t._v(" 不同则不能直接复用和更新，需要执行删除操作，或者老"),n("code",[t._v("component")]),t._v("不在新集合里的，也需要执行删除操作。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueInsertMarkup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("parentInst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" markup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  updateQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parentInst"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" parentInst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    parentNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReactMultiChildUpdateTypes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSERT_MARKUP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    markupIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" markupQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("markup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    content"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fromIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    toIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" toIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueMove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("parentInst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fromIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  updateQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parentInst"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" parentInst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    parentNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReactMultiChildUpdateTypes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MOVE_EXISTING")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    markupIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    content"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fromIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fromIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    toIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" toIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueRemove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("parentInst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fromIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  updateQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parentInst"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" parentInst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    parentNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReactMultiChildUpdateTypes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REMOVE_NODE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    markupIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    content"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fromIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fromIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    toIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如下图，老集合中包含节点："),n("code",[t._v("A")]),t._v("、"),n("code",[t._v("B")]),t._v("、"),n("code",[t._v("C")]),t._v("、"),n("code",[t._v("D")]),t._v("，更新后的新集合中包含节点："),n("code",[t._v("B")]),t._v("、"),n("code",[t._v("A")]),t._v("、"),n("code",[t._v("D")]),t._v("、"),n("code",[t._v("C")]),t._v("，此时新老集合进行"),n("code",[t._v("diff")]),t._v("差异化对比，发现"),n("code",[t._v("B != A")]),t._v("，则创建并插入"),n("code",[t._v("B")]),t._v("至新集合，删除老集合"),n("code",[t._v("A")]),t._v("；以此类推，创建并插入"),n("code",[t._v("A")]),t._v("、"),n("code",[t._v("D")]),t._v("和"),n("code",[t._v("C")]),t._v("，删除"),n("code",[t._v("B")]),t._v("、"),n("code",[t._v("C")]),t._v("和"),n("code",[t._v("D")]),t._v("。")]),t._v(" "),n("p",[n("img",{attrs:{src:s(540),alt:"image from dependency"}})]),t._v(" "),n("p",[n("code",[t._v("React")]),t._v("发现这类操作繁琐冗余，因为这些都是相同的节点，但由于位置发生变化，导致需要进行繁杂低效的删除、创建操作，其实只要对这些节点进行位置移动即可。")]),t._v(" "),n("p",[t._v("针对这一现象，"),n("code",[t._v("React")]),t._v(" 提出优化策略：允许开发者对同一层级的同组子节点，添加唯一"),n("code",[t._v("key")]),t._v("进行区分，虽然只是小小的改动，性能上却发生了翻天覆地的变化！")]),t._v(" "),n("p",[t._v("新老集合所包含的节点，如下图所示，新老集合进行"),n("code",[t._v("diff")]),t._v(" 差异化对比，通过"),n("code",[t._v("key")]),t._v(" 发现新老集合中的节点都是相同的节点，因此无需进行节点删除和创建，只需要将老集合中节点的位置进行移动，更新为新集合中节点的位置，此时"),n("code",[t._v("React")]),t._v("给出的"),n("code",[t._v("diff")]),t._v(" 结果为："),n("code",[t._v("B")]),t._v("、"),n("code",[t._v("D")]),t._v("不做任何操作，"),n("code",[t._v("A")]),t._v("、"),n("code",[t._v("C")]),t._v("进行移动操作，即可。")]),t._v(" "),n("p",[n("img",{attrs:{src:s(541),alt:"image from dependency"}})]),t._v(" "),n("p",[t._v("那么，如此高效的"),n("code",[t._v("diff")]),t._v(" 到底是如何运作的呢？让我们通过源码进行详细分析。")]),t._v(" "),n("p",[t._v("首先对新集合的节点进行循环遍历，"),n("code",[t._v("for (name in nextChildren)")]),t._v("，通过唯一"),n("code",[t._v("key")]),t._v(" 可以判断新老集合中是否存在相同的节点，"),n("code",[t._v("if (prevChild === nextChild)")]),t._v("，如果存在相同节点，则进行移动操作，但在移动前需要将当前节点在老集合中的位置与"),n("code",[t._v("lastIndex")]),t._v("进行比较，"),n("code",[t._v("if (child._mountIndex < lastIndex)")]),t._v("，则进行节点移动操作，否则不执行该操作。这是一种顺序优化手段，"),n("code",[t._v("lastIndex")]),t._v(" 一直在更新，表示访问过的节点在老集合中最右的位置（即最大的位置），如果新集合中当前访问的节点比"),n("code",[t._v("lastIndex")]),t._v(" 大，说明当前访问节点在老集合中就比上一个节点位置靠后，则该节点不会影响其他节点的位置，因此不用添加到差异队列中，即不执行移动操作，只有当访问的节点比"),n("code",[t._v("lastIndex")]),t._v(" 小时，才需要进行移动操作，流程如下：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(542),alt:"image from dependency"}})]),t._v(" "),n("p",[t._v("以上图为例，可以更为清晰直观的描述"),n("code",[t._v("diff")]),t._v(" 的差异对比过程：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("从新集合中取得"),n("code",[t._v("B")]),t._v("，判断老集合中存在相同节点 "),n("code",[t._v("B")]),t._v("，通过对比节点位置判断是否进行移动操作，"),n("code",[t._v("B")]),t._v(" 在老集合中的位置"),n("code",[t._v("B._mountIndex = 1")]),t._v("，此时"),n("code",[t._v("lastIndex = 0")]),t._v("，不满足"),n("code",[t._v("child._mountIndex < lastIndex")]),t._v("的条件，因此不对"),n("code",[t._v("B")]),t._v("进行移动操作；更新"),n("code",[t._v("lastIndex = Math.max(prevChild._mountIndex, lastIndex)")]),t._v("，其中 "),n("code",[t._v("prevChild._mountIndex")]),t._v("表示"),n("code",[t._v("B")]),t._v("在老集合中的位置，则 "),n("code",[t._v("lastIndex ＝ 1")]),t._v("，并将"),n("code",[t._v("B")]),t._v(" 的位置更新为新集合中的位置"),n("code",[t._v("prevChild._mountIndex = nextIndex")]),t._v("，此时新集合中 "),n("code",[t._v("B._mountIndex = 0")]),t._v("，"),n("code",[t._v("nextIndex++")]),t._v(" 进入下一个节点的判断。")])]),t._v(" "),n("li",[n("p",[t._v("从新集合中取得"),n("code",[t._v("A")]),t._v("，判断老集合中存在相同节点 "),n("code",[t._v("A")]),t._v("，通过对比节点位置判断是否进行移动操作，"),n("code",[t._v("A")]),t._v(" 在老集合中的位置"),n("code",[t._v("A._mountIndex = 0")]),t._v("，此时"),n("code",[t._v("lastIndex = 1")]),t._v("，满足"),n("code",[t._v("child._mountIndex < lastIndex")]),t._v("的条件，因此对"),n("code",[t._v("A")]),t._v("进行移动操作"),n("code",[t._v("enqueueMove(this, child._mountIndex, toIndex)")]),t._v("，其中"),n("code",[t._v("toIndex")]),t._v("其实就是 "),n("code",[t._v("nextIndex")]),t._v("，表示"),n("code",[t._v("A")]),t._v("需要移动到的位置；更新 "),n("code",[t._v("lastIndex = Math.max(prevChild._mountIndex, lastIndex)")]),t._v("，则"),n("code",[t._v("lastIndex ＝ 1")]),t._v("，并将"),n("code",[t._v("A")]),t._v(" 的位置更新为新集合中的位置"),n("code",[t._v("prevChild._mountIndex = nextIndex")]),t._v("，此时新集合中 "),n("code",[t._v("A._mountIndex = 1")]),t._v("，"),n("code",[t._v("nextIndex++")]),t._v("进入下一个节点的判断。")])]),t._v(" "),n("li",[n("p",[t._v("从新集合中取得"),n("code",[t._v("D")]),t._v("，判断老集合中存在相同节点 "),n("code",[t._v("D")]),t._v("，通过对比节点位置判断是否进行移动操作，"),n("code",[t._v("D")]),t._v(" 在老集合中的位置"),n("code",[t._v("D._mountIndex = 3")]),t._v("，此时"),n("code",[t._v("lastIndex = 1")]),t._v("，不满足"),n("code",[t._v("child._mountIndex < lastIndex")]),t._v("的条件，因此不对"),n("code",[t._v("D")]),t._v("进行移动操作；更新"),n("code",[t._v("lastIndex = Math.max(prevChild._mountIndex, lastIndex)")]),t._v("，则 "),n("code",[t._v("lastIndex ＝ 3")]),t._v("，并将"),n("code",[t._v("D")]),t._v("的位置更新为新集合中的位置 "),n("code",[t._v("prevChild._mountIndex = nextIndex")]),t._v("，此时新集合中"),n("code",[t._v("D._mountIndex = 2")]),t._v("，"),n("code",[t._v("nextIndex++")]),t._v(" 进入下一个节点的判断。")])]),t._v(" "),n("li",[n("p",[t._v("从新集合中取得"),n("code",[t._v("C")]),t._v("，判断老集合中存在相同节点"),n("code",[t._v("C")]),t._v("，通过对比节点位置判断是否进行移动操作，"),n("code",[t._v("C")]),t._v(" 在老集合中的位置"),n("code",[t._v("C._mountIndex = 2")]),t._v("，此时"),n("code",[t._v("lastIndex = 3")]),t._v("，满足"),n("code",[t._v("child._mountIndex < lastIndex")]),t._v(" 的条件，因此对"),n("code",[t._v("C")]),t._v("进行移动操作"),n("code",[t._v("enqueueMove(this, child._mountIndex, toIndex)")]),t._v("；更新"),n("code",[t._v("lastIndex = Math.max(prevChild._mountIndex, lastIndex)")]),t._v("，则 "),n("code",[t._v("lastIndex ＝ 3")]),t._v("，并将"),n("code",[t._v("C")]),t._v("的位置更新为新集合中的位置 "),n("code",[t._v("prevChild._mountIndex = nextIndex")]),t._v("，此时新集合中 "),n("code",[t._v("C._mountIndex = 3")]),t._v("，"),n("code",[t._v("nextIndex++")]),t._v(" 进入下一个节点的判断，由于 C 已经是最后一个节点，因此 "),n("code",[t._v("diff")]),t._v("到此完成。")])])]),t._v(" "),n("p",[t._v("以上主要分析新老集合中存在相同节点但位置不同时，对节点进行位置移动的情况，如果新集合中有新加入的节点且老集合存在需要删除的节点，那么"),n("code",[t._v("React diff")]),t._v(" 又是如何对比运作的呢？")]),t._v(" "),n("p",[t._v("以下图为例：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(543),alt:"image from dependency"}})]),t._v(" "),n("ul",[n("li",[n("p",[t._v("从新集合中取得"),n("code",[t._v("B")]),t._v("，判断老集合中存在相同节点"),n("code",[t._v("B")]),t._v("，由于"),n("code",[t._v("B")]),t._v("在老集合中的位置"),n("code",[t._v("B._mountIndex = 1")]),t._v("，此时"),n("code",[t._v("lastIndex = 0")]),t._v("，因此不对"),n("code",[t._v("B")]),t._v("进行移动操作；更新"),n("code",[t._v("lastIndex ＝ 1")]),t._v("，并将"),n("code",[t._v("B")]),t._v("的位置更新为新集合中的位置"),n("code",[t._v("B._mountIndex = 0")]),t._v("，"),n("code",[t._v("nextIndex++")]),t._v("进入下一个节点的判断。")])]),t._v(" "),n("li",[n("p",[t._v("从新集合中取得"),n("code",[t._v("E")]),t._v("，判断老集合中不存在相同节点 "),n("code",[t._v("E")]),t._v("，则创建新节点"),n("code",[t._v("E")]),t._v("；更新"),n("code",[t._v("lastIndex ＝ 1")]),t._v("，并将"),n("code",[t._v("E")]),t._v("的位置更新为新集合中的位置，"),n("code",[t._v("nextIndex++")]),t._v("进入下一个节点的判断。")])]),t._v(" "),n("li",[n("p",[t._v("从新集合中取得"),n("code",[t._v("C")]),t._v("，判断老集合中存在相同节点"),n("code",[t._v("C")]),t._v("，由于"),n("code",[t._v("C")]),t._v("在老集合中的位置"),n("code",[t._v("C._mountIndex = 2")]),t._v("，"),n("code",[t._v("lastIndex = 1")]),t._v("，此时"),n("code",[t._v("C._mountIndex > lastIndex")]),t._v("，因此不对"),n("code",[t._v("C")]),t._v("进行移动操作；更新"),n("code",[t._v("lastIndex ＝ 2")]),t._v("，并将"),n("code",[t._v("C")]),t._v("的位置更新为新集合中的位置，"),n("code",[t._v("nextIndex++")]),t._v("进入下一个节点的判断。")])]),t._v(" "),n("li",[n("p",[t._v("从新集合中取得"),n("code",[t._v("A")]),t._v("，判断老集合中存在相同节点"),n("code",[t._v("A")]),t._v("，由于"),n("code",[t._v("A")]),t._v("在老集合中的位置"),n("code",[t._v("A._mountIndex = 0")]),t._v("，"),n("code",[t._v("lastIndex = 2")]),t._v("，此时"),n("code",[t._v("A._mountIndex < lastIndex")]),t._v("，因此对"),n("code",[t._v("A")]),t._v("进行移动操作；更新"),n("code",[t._v("lastIndex ＝ 2")]),t._v("，并将"),n("code",[t._v("A")]),t._v("的位置更新为新集合中的位置，"),n("code",[t._v("nextIndex++")]),t._v("进入下一个节点的判断。")])]),t._v(" "),n("li",[n("p",[t._v("当完成新集合中所有节点"),n("code",[t._v("diff")]),t._v(" 时，最后还需要对老集合进行循环遍历，判断是否存在新集合中没有但老集合中仍存在的节点，发现存在这样的节点"),n("code",[t._v("D")]),t._v("，因此删除节点"),n("code",[t._v("D")]),t._v("，到此"),n("code",[t._v("diff")]),t._v("全部完成。")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_updateChildren")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextNestedChildrenElements"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transaction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" prevChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_renderedChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nextChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_reconcilerUpdateChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextNestedChildrenElements"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transaction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("nextChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nextIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" prevChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prevChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nextChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" nextChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移动节点")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_mountIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      prevChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_mountIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lastIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_mountIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除节点")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_unmountChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化并创建节点")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_mountChildAtIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        nextChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transaction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    nextIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_unmountChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_renderedChildren "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移动节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("moveChild")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_mountIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" lastIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareToManageChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueMove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_mountIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("createChild")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mountImage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareToManageChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueInsertMarkup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mountImage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_mountIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareToManageChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueRemove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_mountIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_unmountChild")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_mountIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_mountChildAtIndex")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  transaction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  context")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mountImage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ReactReconciler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mountComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    transaction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_nativeContainerInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    context\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_mountIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mountImage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),n("p",[t._v("当然，"),n("code",[t._v("React diff")]),t._v(" 还是存在些许不足与待优化的地方，如下图所示，若新集合的节点更新为："),n("code",[t._v("D")]),t._v("、"),n("code",[t._v("A")]),t._v("、"),n("code",[t._v("B")]),t._v("、"),n("code",[t._v("C")]),t._v("，与老集合对比只有"),n("code",[t._v("D")]),t._v("节点移动，而"),n("code",[t._v("A")]),t._v("、"),n("code",[t._v("B")]),t._v("、"),n("code",[t._v("C")]),t._v("仍然保持原有的顺序，理论上"),n("code",[t._v("diff")]),t._v("应该只需对"),n("code",[t._v("D")]),t._v(" 执行移动操作，然而由于"),n("code",[t._v("D")]),t._v(" 在老集合的位置是最大的，导致其他节点的"),n("code",[t._v("_mountIndex < lastIndex")]),t._v("，造成"),n("code",[t._v("D")]),t._v("没有执行移动操作，而是"),n("code",[t._v("A")]),t._v("、"),n("code",[t._v("B")]),t._v("、"),n("code",[t._v("C")]),t._v("全部移动到"),n("code",[t._v("D")]),t._v("节点后面的现象。")]),t._v(" "),n("p",[n("img",{attrs:{src:s(544),alt:"image from dependency"}})]),t._v(" "),n("p",[t._v("建议：在开发过程中，尽量减少类似将最后一个节点移动到列表首部的操作，当节点数量过大或更新操作过于频繁时，在一定程度上会影响"),n("code",[t._v("React")]),t._v("的渲染性能。")]),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("React")]),t._v("通过制定大胆的"),n("code",[t._v("diff")]),t._v("策略，将"),n("code",[t._v("O(n3)")]),t._v(" 复杂度的问题转换成"),n("code",[t._v("O(n)")]),t._v("复杂度的问题；")]),t._v(" "),n("li",[n("code",[t._v("React")]),t._v("通过分层求异的策略，对"),n("code",[t._v("tree diff")]),t._v(" 进行算法优化；")]),t._v(" "),n("li",[n("code",[t._v("React")]),t._v("通过相同类生成相似树形结构，不同类生成不同树形结构的策略，对"),n("code",[t._v("component diff")]),t._v("进行算法优化；")]),t._v(" "),n("li",[n("code",[t._v("React")]),t._v("通过设置唯一 "),n("code",[t._v("key")]),t._v("的策略，对"),n("code",[t._v("element diff")]),t._v(" 进行算法优化；")]),t._v(" "),n("li",[t._v("建议，在开发组件时，保持稳定的"),n("code",[t._v("DOM")]),t._v(" 结构会有助于性能的提升；")]),t._v(" "),n("li",[t._v("建议，在开发过程中，尽量减少类似将最后一个节点移动到列表首部的操作，当节点数量过大或更新操作过于频繁时，在一定程度上会影响"),n("code",[t._v("React")]),t._v("的渲染性能。")])]),t._v(" "),n("h2",{attrs:{id:"参考文献"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://reactjs.org/docs/reconciliation.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("Reconciliation diff")]),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://react.docschina.org/docs/reconciliation.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("diff")]),t._v("算法 中文文档"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/20346379",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("React")]),t._v("源码剖析系列 － 不可思议的"),n("code",[t._v("react diff")]),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"http://www.infoq.com/cn/articles/react-dom-diff?from=timeline&isappinstalled=0",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入浅出"),n("code",[t._v("React")]),t._v("（四）：虚拟"),n("code",[t._v("DOM Diff")]),t._v("算法解析\n"),n("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);